"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# 許可するホスト名
# Render の URL (例: eigoquest.onrender.com) とローカルホストを追加
ALLOWED_HOSTS = [
    '127.0.0.1',
    config('RENDER_EXTERNAL_HOSTNAME', default=None) # Renderが自動で設定
]
# RENDER_EXTERNAL_HOSTNAME がある場合のみリストに追加
if ALLOWED_HOSTS[1]:
    ALLOWED_HOSTS.pop(1)
    ALLOWED_HOSTS.append(config('RENDER_EXTERNAL_HOSTNAME'))
else:
    ALLOWED_HOSTS.pop(1) # None を削除


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'quiz.apps.QuizConfig',
    'accounts.apps.AccountsConfig',
    'rest_framework',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        # .env ファイルの DB_... 設定をフォールバックとして使用
        default=f"postgres://{config('DB_USER')}:{config('DB_PASSWORD')}@{config('DB_HOST')}:{config('DB_PORT')}/{config('DB_NAME')}",
        conn_max_age=600
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ログイン後のリダイレクト先 (トップページ)
LOGIN_REDIRECT_URL = '/' 

# ログアウト後のリダイレクト先 (トップページ)
LOGOUT_REDIRECT_URL = '/'

# 1. /static/ というURLで静的ファイルにアクセスする設定 
STATIC_URL = 'static/'

# 2. 追記: プロジェクト共通の静的ファイルを置く場所を指定
# (templates と同じ階層に 'static' ディレクトリを作ります、という宣言)
STATICFILES_DIRS = [BASE_DIR / 'static']


STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# 追記 (collectstatic の実行場所)
STATIC_ROOT = BASE_DIR / 'staticfiles' 

# 追記 (WhiteNoise のための設定)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# CORS (Cross-Origin Resource Sharing) の設定
# Vue.js の開発サーバーからのアクセスを許可する
CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173', # Vue.js のデフォルト開発サーバー
]

# (将来的には、ここにVercelなどの本番フロントエンドURLも追加する)
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:5173',
#     'https://eigoquest-frontend.vercel.app', 
# ]